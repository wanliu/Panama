<div id="page" >
	<div class="row-fluid">
		<%= link_to t(:create), '#', :class => 'btn add_category' %>
	</div>
	<div class="row-fluid">
		<%= render_widget :table, :display, @children, nil, 
			:adapter => :tree_table,
			:heads => [:name, :created_at, :updated_at, :util],
			:head_options => { 
				:class => %w(table table-striped table-bordered table-hover)
			},
			:add_column => [ {:util => proc do |row|
				category_util_field(row)
			end }],
			:modify_column => [{:name => proc do |row|
				category_name_field(row)
			end }],
			:hide_column => [:_id], 
			:children_field => :children
		%>
	</div>
</div>
<%= register_javascript :category_tools do %>
<script type="text/javascript">
	require(['jquery'], function($){
		$("#table a.category").on('click', function(){
			var $this = $(this);
			var state = $this.attr('state') === 'true';
			var trs = getChildrenTrs($this.parents('tr'));
			$(trs).each(function(){
				if (state)
					$(this).slideUp();
				else
					$(this).slideDown();
			});
			state = !state;
			$this.attr('state', state);
		});
		$(".add_category").on('click', function(){
			var target = $("#table table").get(0);
			addChildCategoryEditor(target);
		});

		$("#table .add_child").on('click', function(){
			var $this = $(this);
			var $tr = $this.parents('tr');
			var trs = getChildrenTrs($tr);
			var target = trs.length <= 0 ? $tr : trs.pop();
			var id = $tr.find('td.hide').text();
			
			var indent = $tr.attr('indent');
			addChildCategoryEditor(target, id, indent);
		});

		function addChildCategoryEditor(target, id, indent){
			var url = "<%= File.join(request.path, 'new') %>";

			if (typeof id === 'undefined')
				id = null;
			if (typeof indent === 'undefined')
				indent = -1;

			$.get(url, {parent_id: id, ajaxify: true, indent: indent}, function(data){
				var new_tr = $(target).is('table') ? $(data).appendTo(target) : $(data).insertAfter(target);
				new_tr.find("input[type=text]").focus()
			})				
		}

		function getChildrenTrs(parent){
			var result = [];
			var _next = parent;
			var indent = parseInt($(parent).attr('indent'));

			while (_next = $(_next).next()){
				if (parseInt(_next.attr('indent')) <= indent)
					break;
				else
					result.push(_next);
			}
			return result;
		}

	});
</script>
<% end %>
